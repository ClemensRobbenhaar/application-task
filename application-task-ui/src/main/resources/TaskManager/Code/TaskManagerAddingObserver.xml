<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="TaskManager.Code.TaskManagerAddingObserver" locale="">
  <web>TaskManager.Code</web>
  <name>TaskManagerAddingObserver</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1602191188000</creationDate>
  <parent>TaskManager.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1602342816000</date>
  <contentUpdateDate>1602191188000</contentUpdateDate>
  <version>1.1</version>
  <title>Observer for Adding TaskManagers</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>This page contains code to check if a new TaskManager page has been added, and allows to create tasks as subpages of that task napager page.</content>
  <object>
    <name>TaskManager.Code.TaskManagerAddingObserver</name>
    <number>0</number>
    <className>XWiki.ComponentClass</className>
    <guid>f10f2700-ca0c-467e-b3db-bf25e7944b8e</guid>
    <class>
      <name>XWiki.ComponentClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <roleHint>
        <disabled>0</disabled>
        <name>roleHint</name>
        <number>2</number>
        <prettyName>Component Role Hint</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </roleHint>
      <roleType>
        <disabled>0</disabled>
        <name>roleType</name>
        <number>1</number>
        <prettyName>Component Role Type</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </roleType>
      <scope>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>scope</name>
        <number>3</number>
        <prettyName>Component Scope</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>wiki=Current Wiki|user=Current User|global=Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </scope>
    </class>
    <property>
      <roleHint>org.xwiki.contrib.application-task.TaskManagerChangeListener</roleHint>
    </property>
    <property>
      <roleType>org.xwiki.observation.EventListener</roleType>
    </property>
    <property>
      <scope>wiki</scope>
    </property>
  </object>
  <object>
    <name>TaskManager.Code.TaskManagerAddingObserver</name>
    <number>0</number>
    <className>XWiki.ComponentMethodClass</className>
    <guid>826c2797-b0bc-4d42-b36e-17dd4a59105f</guid>
    <class>
      <name>XWiki.ComponentMethodClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <code>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Method body code</prettyName>
        <rows>20</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Method name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <code>{{groovy}}
import org.xwiki.bridge.event.*
xcontext.method.output.value = [new DocumentCreatedEvent(), new DocumentUpdatedEvent(), new DocumentDeletingEvent(), new DocumentsDeletingEvent()]
{{/groovy}}</code>
    </property>
    <property>
      <name>getEvents</name>
    </property>
  </object>
  <object>
    <name>TaskManager.Code.TaskManagerAddingObserver</name>
    <number>1</number>
    <className>XWiki.ComponentMethodClass</className>
    <guid>59bd5849-9d3e-4419-ad02-cb35126b81f2</guid>
    <class>
      <name>XWiki.ComponentMethodClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <code>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Method body code</prettyName>
        <rows>20</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Method name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <code>{{groovy}}
xcontext.method.output.value = "org.xwiki.contrib.application-task.TaskManagerChangeListener"
{{/groovy}}</code>
    </property>
    <property>
      <name>getName</name>
    </property>
  </object>
  <object>
    <name>TaskManager.Code.TaskManagerAddingObserver</name>
    <number>2</number>
    <className>XWiki.ComponentMethodClass</className>
    <guid>9db75b4e-cbc7-473d-9eb1-b41011708608</guid>
    <class>
      <name>XWiki.ComponentMethodClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <code>
        <disabled>0</disabled>
        <editor>Text</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Method body code</prettyName>
        <rows>20</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Method name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <code>{{groovy}}
import org.xwiki.bridge.event.*;

def logger = services.logging.getLogger('org.xwiki.contrib.application-task.TaskManagerChangeListener')
def event = xcontext.method.input.get(0)
def source = xcontext.method.input.get(1)
def wikiContext = xcontext.method.input.get(2)
def wiki = xcontext.getXWiki()

def tmClass = 'TaskManager.Code.IsLocalTaskManagerClass'
def templateProvider = xwiki.getDocument('TaskManager.TaskManagerTemplateProvider')
def providerInfo = templateProvider.getObject('XWiki.TemplateProviderClass')

if (!providerInfo) { return }

def needSave = false
def mustAdd = false
def mustDelete = false

def refSerializer = services.model
def creationRestrictions = providerInfo.getValue('creationRestrictions')

logger.trace('we see event {} for doc {}', event, source.fullName)

if (source.fullName != 'TaskManager.TaskManagerTemplateProvider' &amp;&amp; source.fullName != 'TaskManager.Code.TaskManagerLocalTemplate') {

  if (event instanceof DocumentCreatedEvent) {

    mustAdd = (source.getObjectNumbers(tmClass) != 0)
    logger.debug('page create: mustAdd={}', mustAdd)
  } else if (event instanceof DocumentUpdatedEvent) {

    def newHasEvent = (source.getObject(tmClass) != null)
    logger.trace('document update to version {}: new has event {}', source.getVersion(), newHasEvent)

    def oldHasEvent = false
    def prevVersionStr = source.getPreviousVersion()
    if (prevVersionStr) {
      def prevVersion = source.getVersioningStore(wikiContext).loadXWikiDoc(source, prevVersionStr, wikiContext)
      oldHasEvent = (prevVersion != null &amp;&amp; (prevVersion.getObject(tmClass) != null))
    }
    logger.trace('document update from old version {}: old has event {}', prevVersionStr, oldHasEvent)

    logger.debug('document update: from {} to {}', oldHasEvent, newHasEvent)
    mustAdd = (newHasEvent &amp;&amp; !oldHasEvent)
    mustDelete = (oldHasEvent &amp;&amp; !newHasEvent)
  } else if (event instanceof DocumentDeletingEvent) {

    def deletedDoc = source.getDeletedDocument()
    mustDelete = (deletedDoc.getObject(tmClass) != null)
    logger.debug('document delete: {}; must delete {}', source, mustDelete)
  } else if (event instanceof DocumentsDeletingEvent) {

    // note: this event seems not to be fired in xwiki 9.11.7
    logger.info('documents delete: {}  NOT IMPLEMENTED', source)
  }

  logger.trace('result: add={}, del={}', mustAdd, mustDelete)
  def spaceStr
  if (mustAdd) {
    spaceStr = refSerializer.serialize(source.getDocumentReference().getParent())
    needSave = creationRestrictions.add(spaceStr)
  }
  if (mustDelete) {
    spaceStr = refSerializer.serialize(source.getDocumentReference().getParent())
    needSave = creationRestrictions.remove(spaceStr)
    // we sometimes have duplicate entries, so:
    while (creationRestrictions.remove(spaceStr)) {}
  }

  logger.debug('result: template provider updated? {}', needSave)
  if (needSave) {
    def commment
    if(mustAdd) {
      comment = "added $spaceStr to supported locations"
    } else {
      comment = "removed $spaceStr from supported locations"
    }
    templateProvider.saveAsAuthor(comment, true)
  }
}

logger.trace('exit {}', event)
{{/groovy}}</code>
    </property>
    <property>
      <name>onEvent</name>
    </property>
  </object>
  <object>
    <name>TaskManager.Code.TaskManagerAddingObserver</name>
    <number>0</number>
    <className>XWiki.RequiredRightClass</className>
    <guid>ad269cdf-6124-4b09-b720-05cc015fcecd</guid>
    <class>
      <name>XWiki.RequiredRightClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <level>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>level</name>
        <number>1</number>
        <picker>0</picker>
        <prettyName>level</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators> ,|</separators>
        <size>1</size>
        <sort>none</sort>
        <unmodifiable>0</unmodifiable>
        <validationMessage/>
        <validationRegExp/>
        <values>edit|programming</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </level>
    </class>
    <property>
      <level>programming</level>
    </property>
  </object>
</xwikidoc>
