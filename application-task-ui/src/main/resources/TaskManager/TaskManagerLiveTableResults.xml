<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>TaskManager</web>
  <name>TaskManagerLiveTableResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <creationDate>1382358827000</creationDate>
  <date>1382358827000</date>
  <contentUpdateDate>1382358827000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
$services.localization.use('document', 'TaskManager.TaskManagerTranslations')
{{/velocity}}

{{include reference="XWiki.LiveTableResultsMacros" /}}

{{velocity wiki="false"}}
#**
 * Override: Builds the JSON response to a live table data call.
 *
 * @param $map stores the JSON in memory so that it can be adjusted before serialization
 *#
#macro(gridresultwithfilter_buildJSON $className $collist $filterfrom $filterwhere $filterParams $map)
  #gridresultwithfilter_buildQuery($className $collist $filterfrom $filterwhere $filterParams)
  #set($discard = $map.put('column list', $collist))
  #set($discard = $map.put('filter from', $filterfrom))
  #set($discard = $map.put('filter where', $filterwhere))
  #if("$!request.sql" == '1' || true)
    #set($discard = $map.put('sql', $sql))
    #set($discard = $map.put('params', $sqlParams))
  #end
  #set($discard = $map.put('reqNo', $mathtool.toInteger($request.reqNo)))
  ###gridresult_buildTagCloudJSON($map)
  #gridresult_buildRowsJSON($map)
  #set($defaultDocName = $services.model.createDocumentReference('','','','default').getName())
  #foreach($result in $map.get('rows'))
    ## here we change / abuse the fullName to the value of the next "meaningful" parent
    ## if the first parent has a name of "TaskManager", and it is not the main task manager
    ## then we display the name of their parent
    ## otherwise we show the name of the parent of the task.
    ## XXX: what if we use doc.space instead?
    #if("$!result['doc_fullName']" != '')
       #set($docRef = $services.model.resolveDocument($result.get('doc_fullName')))
       ###set($discard = $result.put('doc_ref', "$docRef"))
       ###set($discard = $result.put('default', $defaultDocName))
       #if($docRef.getName() == $defaultDocName)
         ###set($discard = $result.put('doc_isdefault', true))
         #set($parentSpaceRef = $docRef.getParent().getParent())
       #else
         #set($parentSpaceRef = $docRef.getParent())
       #end
       #if ($parentSpaceRef.getName() == "TaskManager" &amp;&amp; $parentSpaceRef.getParent().getType() == "SPACE")
         #set($displayParentSpaceRef = $parentSpaceRef.getParent())
       #else
         #set($displayParentSpaceRef = $parentSpaceRef)
       #end
       #set($parentSpaceDoc = $xwiki.getDocument($services.model.createDocumentReference($defaultDocName, $displayParentSpaceRef)))
       #set($parentSpaceTitle = "-") ## just in case the document is null
       #set($parentSpaceTitle = $parentSpaceDoc.getPlainTitle())
       ###set($discard = $result.put('doc_parent', "$parentSpaceRef"))
       ###set($discard = $result.put('doc_displayparent', "$displayParentSpaceRef"))
       ###set($discard = $result.put('doc_fullname2', "$parentSpaceTitle"))
       #set($parentSpaceURL = $xwiki.getURL($parentSpaceRef))
       ###set($discard = $result.put('doc_parent_url', $parentSpaceURL))
       #set($locationHtml = "&lt;a class=${escapetool.Q}wikigeneratedlink${escapetool.Q} href=${escapetool.Q}$escapetool.xml($parentSpaceURL)${escapetool.Q}&gt;$escapetool.xml($parentSpaceTitle)&lt;/a&gt;")
       #set($discard = $result.put('doc_fullName', $locationHtml))
    #end
  #end
#end


## this is mostly a copy from XWiki.LiveTableResults with unneccessary stuff removed
## and a bit of extras added
## TODO: still needed ?
#set ($extra = '')
#set ($params = [])
#if ("$!request.space" != '')
  #set ($extra = "${extra} AND doc.space = ?")
  #set ($discard = $params.add($request.space))
#end
#if ("$!request.location" != '')
  #set ($extra = "${extra} AND LOWER(doc.fullName) LIKE LOWER(?) ESCAPE '!'")
  #set ($locationFilterValue = $request.location)
  ## Note: the "_", "[", and the "%" characters have special meanings in standard SQL servers (they behave as wildcards).
  ## However, it is not what the user expects (e.g. https://jira.xwiki.org/browse/XWIKI-12608).
  ## As a consequence, we must escape these characters.
  ## See http://www.jguru.com/faq/view.jsp?EID=8881 to understand why we use the special clause 'escape' above.
  ## Since we use '!' for the escaping, we also double existing ones.
  #set ($locationFilterValue = $locationFilterValue.replaceAll('([\[%_!])', '!$1'))
  ## Because the user might filter with "/" as separator we replace that by "%", because it could be "."
  ## (the space separator) or "/" (as it is in the document name).
  ## In addition, using "%" (any sequence of character) instead of "_" (any single character) gives the ability
  ## to filter on different levels:
  ##   e.g. filtering on "Blog/Intro" will return "Blog.BlogIntroduction".
  ##        On the other hand, it will also returns: "BlogForIntrospection", which might be unexpected.
  #set ($locationFilterValue = $locationFilterValue.replaceAll('/', '%'))
  #set ($discard = $params.add("%${locationFilterValue}%"))
#end
#set($collist = [])
#foreach($col in $request.collist.split(','))
  #set($discard = $collist.add($col))
#end
#gridresultwithfilter("$!request.classname" $collist '' "${extra}" $params)
{{/velocity}}</content>
</xwikidoc>
